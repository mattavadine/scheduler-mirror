Interview TranscriptErik KasperNovember 10, 1:00pm, Building 192-129Prototype Member: Eric LiebowitzRequirements Member: Jonathan RawsonNotes:* Doesn’t matter whether it’s desktop or website* Teaches a class for Civil Engineering* Has knowledge of computer science and mathematical algorithms* Said he would prefer vi editor to something using a mouseDemonstration of prototype:* Login completed with username: ekasper* Demonstrate populating a schedule* Constraint: 50% of classes need to be between 9am-3pm* Demonstrate moving courses around* Asked what algorithm was being used, wondered if linear programming or multiple constraints were being used* Used linear programming and quadratic programming to solve the problem* Walked through courses: mentioned button to enter data on peoplesoft* Walked through instructors and locations management* Rooms and times change every quarter because the Science building isn’t in use right nowAssist the client using the prototype* Wants a larger dataset to play around with (liked the CHEM data)* Will play around with it later (database seems to have switched to MATH courses instead of CHEM partway through the interview)Ask questions about product features1. Do you prefer a desktop app or a web application?* Either is fine2. Do you like the drag and drop?* Would prefer a vi type editor3. Is the section number automatically appended?* They leave gaps in the section numbers based on needs of the registrar’s office* Section number must start at one, not zeroAsk questions about product quality and adoptability1. Are there any missing features in what you have seen so far, that is features that you think are fundamentally important to the scheduling program?* Likes the structure and idea of the program* The way it is handled now is that they go over transparencies of proposed schedules and determine if there are any conflicts* 3D surface plots with times, faculty, and courses is something they have done2. Do you have any other questions that we have not yet covered?* None3. The candidates are "PolySched", "Tempus", "SchedIt", "Schedulus"* Tempus seems fine, doesn’t really care. Thinks the Scheduler Project seems pretty straightforward4. Assuming we deliver a product that’s reliable, and has the kind of features we’ve talked about today, do you realistically see yourself using it to do real scheduling? If not, what do we need to do to make it usable for you?* Asked if it would be done at the end of the year? We outlined the timeline for the project