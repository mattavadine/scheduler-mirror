/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */



package scheduler.db.admin.admin_ui;

import javax.swing.*;
import scheduler.*;
import scheduler.db.locationdb.*;

/**
 *
 * @author jsoliman
 */
public class EditLocation extends MyView {

    /** Location Database */
    protected LocationDB database = Scheduler.ldb;
    /** Individual location */
    private Location location = new Location("","",0, "Lecture", false, false, false, false);

    /** Creates new form EditLocation */
    public EditLocation(Location l) {
        this.location = l;
        initComponents();
        this.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        String building = location.getBuilding();
        String room = location.getRoom();
        String max = location.getMaxOccupancy() + "";
        String type = location.getType();
        boolean smartroom = location.isSmartRoom();
        boolean laptop = location.hasLaptopConnectivity();
        boolean overhead = location.hasOverhead();
        boolean dis = location.isADACompliant();

        BuildingNumber = new javax.swing.JLabel();
        RoomNumber = new javax.swing.JLabel();
        MaxOccupancy = new javax.swing.JLabel();
        RoomType = new javax.swing.JLabel();
        ProvidedEquipment = new javax.swing.JLabel();
        BuildingField = new javax.swing.JTextField(building);
        BuildingField.setEnabled(false);
        RoomField = new javax.swing.JTextField(room);
        RoomField.setEnabled(false);
        MaxOccupancyField = new javax.swing.JTextField(max);
        LaptopBox = new javax.swing.JCheckBox();
        LaptopBox.setSelected(laptop);
        SmartroomBox = new javax.swing.JCheckBox();
        SmartroomBox.setSelected(smartroom);
        OverheadBox = new javax.swing.JCheckBox();
        OverheadBox.setSelected(overhead);
        Submit = new javax.swing.JButton();
        Cancel = new javax.swing.JButton();
        DisabilitiesCheckBox = new javax.swing.JCheckBox();
        DisabilitiesCheckBox.setSelected(dis);
        LocationTypeBox = new javax.swing.JComboBox();
        LocationTypeBox.setSelectedItem((Object)type);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        BuildingNumber.setText("Building #:");

        RoomNumber.setText("Room #:");

        MaxOccupancy.setText("Maximum Occupancy: ");

        RoomType.setText("Room Type: ");

        ProvidedEquipment.setText("ProvidedEquipment");

        LaptopBox.setText("Laptop Connectivity");

        SmartroomBox.setText("Smartroom");
        SmartroomBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SmartroomBoxActionPerformed(evt);
            }
        });

        OverheadBox.setText("Overhead");

        Submit.setText("Submit");
        Submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubmitActionPerformed(evt);
            }
        });

        Cancel.setText("Cancel");
        Cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelActionPerformed(evt);
            }
        });

        DisabilitiesCheckBox.setText("Disability Compliance");
        DisabilitiesCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DisabilitiesCheckBoxActionPerformed(evt);
            }
        });

        LocationTypeBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Lecture", "Lab" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(BuildingNumber)
                                    .addComponent(RoomNumber)
                                    .addComponent(MaxOccupancy)
                                    .addComponent(RoomType))
                                .addGap(29, 29, 29)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(RoomField, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(BuildingField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 87, Short.MAX_VALUE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(LocationTypeBox, javax.swing.GroupLayout.Alignment.LEADING, 0, 87, Short.MAX_VALUE)
                                            .addComponent(MaxOccupancyField))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Submit)
                                .addGap(18, 18, 18)
                                .addComponent(Cancel, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(43, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(OverheadBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(218, 218, 218))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(SmartroomBox)
                        .addContainerGap(206, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(LaptopBox)
                        .addContainerGap(154, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(ProvidedEquipment)
                        .addContainerGap(180, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(DisabilitiesCheckBox)
                        .addContainerGap(144, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BuildingNumber)
                    .addComponent(BuildingField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(RoomNumber)
                    .addComponent(RoomField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(MaxOccupancy)
                    .addComponent(MaxOccupancyField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(RoomType)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(DisabilitiesCheckBox)
                        .addGap(7, 7, 7)
                        .addComponent(ProvidedEquipment)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(LaptopBox)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(SmartroomBox)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(OverheadBox)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Submit)
                            .addComponent(Cancel)))
                    .addComponent(LocationTypeBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SmartroomBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SmartroomBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SmartroomBoxActionPerformed

    private void SubmitActionPerformed(java.awt.event.ActionEvent evt) { 
        String building = BuildingField.getText(); 
        String room = RoomField.getText();
        try {
            int occupancy = Integer.parseInt(MaxOccupancyField.getText());
            String type = (String) LocationTypeBox.getSelectedItem();
            boolean disabilities = DisabilitiesCheckBox.isSelected(); 
            boolean smartroom = SmartroomBox.isSelected();
            boolean laptop = LaptopBox.isSelected();
            boolean overhead = OverheadBox.isSelected();
            location = new Location (building, room, occupancy, type, disabilities, smartroom, laptop,
                overhead);
            if (building.equals("") || room.equals("")) {
                JOptionPane.showMessageDialog(this,
                "The building or room field is empty.",
                "Error",
                 JOptionPane.ERROR_MESSAGE);                     
            }
            else {
               database.editLocation(location);
               this.setVisible(false);
            }
        }
        catch (NumberFormatException n) {
            JOptionPane.showMessageDialog(this,
               "Maximum occupancy must be an integer.",
               "Error",
               JOptionPane.ERROR_MESSAGE);
        }
    }

    private void CancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_CancelActionPerformed

    private void DisabilitiesCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DisablitiesCheckBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DisablitiesCheckBoxActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new EditLocation().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField BuildingField;
    private javax.swing.JLabel BuildingNumber;
    private javax.swing.JButton Cancel;
    private javax.swing.JCheckBox DisabilitiesCheckBox;
    private javax.swing.JCheckBox LaptopBox;
    private javax.swing.JLabel MaxOccupancy;
    private javax.swing.JTextField MaxOccupancyField;
    private javax.swing.JCheckBox OverheadBox;
    private javax.swing.JLabel ProvidedEquipment;
    private javax.swing.JTextField RoomField;
    private javax.swing.JLabel RoomNumber;
    private javax.swing.JLabel RoomType;
    private javax.swing.JCheckBox SmartroomBox;
    private javax.swing.JButton Submit;
    private javax.swing.JComboBox LocationTypeBox;
    // End of variables declaration//GEN-END:variables

}
