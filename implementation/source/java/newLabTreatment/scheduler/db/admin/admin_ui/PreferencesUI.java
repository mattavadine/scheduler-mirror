package scheduler.db.admin.admin_ui;

import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import javax.swing.event.*;
import java.awt.*;
import java.awt.event.*;
import java.util.*;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

import scheduler.*;
import scheduler.generate.*;

import scheduler.db.*;
import scheduler.db.coursedb.*;
import scheduler.db.admin.admin_ui.DayTab;
import scheduler.db.preferencesdb.*;
import scheduler.db.preferencesdb.PreferencesDB.PreferenceExistsException;
/**
 *
 * @author alindt
 */
public class PreferencesUI extends MyView implements Observer {

    private CourseDB cdb = Scheduler.cdb;

    /** Creates new form PreferencesUI */
    public PreferencesUI() {
        initComponents();
        setListeners();
        this.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        Scheduler.pdb.addObserver(this);
        setTitle("Preferences");
      cdb = Scheduler.cdb;
      cdb.addObserver(this);
    }
    
    class MyListDataListener implements ListDataListener {
      public void contentsChanged(ListDataEvent e) {
      }
      public void intervalAdded(ListDataEvent e) {
      }
      public void intervalRemoved(ListDataEvent e) {
      }
    }
    
    public void update(Observable o, Object arg) {
        /*OverlapTab overlapTab = new OverlapTab();
        jPanel2 = overlapTab.getOverlapTab();*/
    }

    public void setListeners() {
        editButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
               editPreference(evt);
            }
        });
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jLabel1 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        overlap_helpButton = new javax.swing.JButton();
        overlap_titleField = new javax.swing.JTextField();
        overlap_titleLabel = new javax.swing.JLabel();
        overlap_weightField = new javax.swing.JTextField();
        overlap_weightLabel = new javax.swing.JLabel();
        noOverlapButton = new javax.swing.JRadioButton();
        canOverlapButton = new javax.swing.JRadioButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        overlap_coursesList = new javax.swing.JList();
        overlap_coursesLabel = new javax.swing.JLabel();
        overlap_addButton = new javax.swing.JButton();
        overlap_createButton = new javax.swing.JButton();
        overlap_resetButton = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        day_title = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator1 = new javax.swing.JSeparator();
        editButton = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();


        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        


        OverlapTab overlapTab = new OverlapTab();
        jPanel2 = overlapTab.getOverlapTab();
        jTabbedPane1.addTab("Overlap", jPanel2);








        jLabel2.setText("Future Preferences go here as new tabs");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 271, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(123, 123, 123)
                .addComponent(jLabel2)
                .addContainerGap(84, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("NYI", jPanel3);

        
        
        
        DayTab dayTab = new DayTab();
        jPanel1 = dayTab.getDayTab();
        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);

        
        
        
        

        jTabbedPane1.addTab("Days", jPanel1);

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        editButton.setText("View");

        jButton4.setText("Delete");

        jButton5.setText("?");

        jLabel3.setFont(new java.awt.Font("DejaVu Sans", 1, 14)); // NOI18N
        jLabel3.setText("Create Preferences");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(editButton)
                        .addGap(21, 21, 21)
                        .addComponent(jButton4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton5))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 155, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 6, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 303, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 223, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editButton)
                    .addComponent(jButton4)
                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 257, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 304, Short.MAX_VALUE)
        );

        getAccessibleContext().setAccessibleName("Days");

        pack();
    }// </editor-fold>//GEN-END:initComponents


    
    
    /**
     * Clears all "DaysOfWeek" input fields.
     *
     * Pre: no-precondition necessary.
     *
     * Post: All possible input fields for "DaysOfWeek"
     *       preference creation are empty.
     *       (Title = "", Weight = "", all days = unselected)
     */
    /*private void resetDayPreference(ActionEvent evt) {
       resetFields();
    }*/
    
    private void editPreference(ActionEvent evt) {
/*      int weight = db_pref.getImportance();
      day_title.setText(title);
      day_weight.setText("" + weight);
  */        
/*
      if(db_pref instanceof DaysForClasses) {
         DaysForClasses dayPref = (DaysForClasses)db_pref;
         int weight = dayPref.getImportance();
         day_title.setText(title);
         day_weight.setText("" + weight);
         if(dayPref.days.contains(Week.MON)) { m_toggle.setSelected(true); }
         if(dayPref.days.contains(Week.TUE)) { m_toggle.setSelected(true); }
         if(dayPref.days.contains(Week.WED)) { m_toggle.setSelected(true); }
         if(dayPref.days.contains(Week.THU)) { m_toggle.setSelected(true); }
         if(dayPref.days.contains(Week.FRI)) { m_toggle.setSelected(true); }
      }*/
    }

    /**
     * Deletes the preference at the selected index of
     * the list of preferences. The preference is removed
     * from the db as well.
     *
     * Pre: A preference must be selected in the list.
     *
     * Post: List.remove(index); List.size --; db.remove(selected pref);
     */
    private void deletePreference(ActionEvent evt) {
       int index = jList1.getSelectedIndex();
       String name = (String)dynamic_list.get(index);

       if(index == -1) {
          JOptionPane.showMessageDialog(null,
                                        "Must have a preference selected to delete it",
                                        "Deletion Error",
                                        JOptionPane.ERROR_MESSAGE);
       }
       else {
          Vector<SchedulePreference> prefs = Scheduler.pdb.getAllLocalPreferences();
          Iterator iterator = prefs.iterator();
          while (iterator.hasNext()) {
             SchedulePreference p = (SchedulePreference) iterator.next();
             if ((p.name).compareTo(name) == 0) {
                System.out.println(p.name);
                Scheduler.pdb.removeLocalPreference( p );
             }
          }
       }
    }
    
    
    private void resetFields() {
       dayTab.resetFields();
    }

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PreferencesUI().setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private DayTab dayTab;
    private ArrayList<SchedulePreference> preferences;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton editButton;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JList jList1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField day_title;
    private javax.swing.JTextField day_weight;
    private DefaultListModel dynamic_list;
    private javax.swing.JRadioButton canOverlapButton;
    private javax.swing.JRadioButton noOverlapButton;
    private javax.swing.JButton overlap_addButton;
    private javax.swing.JLabel overlap_coursesLabel;
    private javax.swing.JList overlap_coursesList;
    private javax.swing.JButton overlap_createButton;
    private javax.swing.JButton overlap_helpButton;
    private javax.swing.JButton overlap_resetButton;
    private javax.swing.JTextField overlap_titleField;
    private javax.swing.JLabel overlap_titleLabel;
    private javax.swing.JTextField overlap_weightField;
    private javax.swing.JLabel overlap_weightLabel;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables

}
