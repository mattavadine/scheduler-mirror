/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * PublishData.java
 *
 * Created on Aug 24, 2010, 12:28:22 AM
 */

package scheduler.db.admin.admin_ui;

import java.util.logging.Level;
import java.util.logging.Logger;
import scheduler.MyView;
import scheduler.Scheduler;
import scheduler.db.coursedb.CourseDB.CourseExistsException;

/**
 *
 * @author jsoliman
 */
public class PublishData extends MyView {

    /** Creates new form PublishData */
    public PublishData() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        CoursesButton = new javax.swing.JButton();
        Text = new javax.swing.JLabel();
        InstructionsButton = new javax.swing.JButton();
        LocationsButton = new javax.swing.JButton();
        PreferencesButton = new javax.swing.JButton();
        SelectionBox = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        CoursesButton.setText("Courses");
        CoursesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CoursesButtonActionPerformed(evt);
            }
        });

        Text.setText("Copy from:");

        InstructionsButton.setText("Instructors");
        InstructionsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InstructionsButtonActionPerformed(evt);
            }
        });

        LocationsButton.setText("Locations");
        LocationsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LocationsButtonActionPerformed(evt);
            }
        });

        PreferencesButton.setText("Preferences");
        PreferencesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PreferencesButtonActionPerformed(evt);
            }
        });

        SelectionBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Permanent Database to Local Database.", "Local Database to Permanent Database." }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Text)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(CoursesButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(LocationsButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(InstructionsButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(PreferencesButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(SelectionBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Text)
                .addGap(2, 2, 2)
                .addComponent(SelectionBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(CoursesButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(InstructionsButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(LocationsButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PreferencesButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CoursesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CoursesButtonActionPerformed
        // TODO add your handling code here:
        String selection = (String)SelectionBox.getSelectedItem();
        if (selection.contains("Local Database to Permanent Database")) {
            Scheduler.schedDB.clearCourses();
            try {
                Scheduler.cdb.localToPermanent();
            } catch (CourseExistsException ex) {
                System.err.println("Error adding local data to permanent data.");
            }
        }
        else {
            System.out.println(selection);
            Scheduler.cdb.permanentToLocal();
        }
        //

    }//GEN-LAST:event_CoursesButtonActionPerformed

    private void InstructionsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InstructionsButtonActionPerformed
        // TODO add your handling code here:
                String selection = (String)SelectionBox.getSelectedItem();
        if (selection.contains("Local Database to Permanent Database")) {
            Scheduler.schedDB.clearInstructors();
            Scheduler.idb.localToPermanent();
        }
        else {
            System.out.println(selection);
            Scheduler.pdb.permanentToLocal();
        }
    }//GEN-LAST:event_InstructionsButtonActionPerformed

    private void LocationsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LocationsButtonActionPerformed
        // TODO add your handling code here:
       String selection = (String)SelectionBox.getSelectedItem();
        if (selection.contains("Local Database to Permanent Database")) {
            Scheduler.schedDB.clearLocations();
            Scheduler.ldb.localToPermanent();
        }
        else {
            System.out.println(selection);
            Scheduler.ldb.permanentToLocal();
        }
    }//GEN-LAST:event_LocationsButtonActionPerformed

    private void PreferencesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PreferencesButtonActionPerformed
        // TODO add your handling code here:
        String selection = (String)SelectionBox.getSelectedItem();
        if (selection.contains("Local Database to Permanent Database")) {
            Scheduler.schedDB.clearPreferences();
            Scheduler.pdb.localToPermanent();
        }
        else {
            System.out.println(selection);
            Scheduler.pdb.permanentToLocal();
        }
    }//GEN-LAST:event_PreferencesButtonActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PublishData().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CoursesButton;
    private javax.swing.JButton InstructionsButton;
    private javax.swing.JButton LocationsButton;
    private javax.swing.JButton PreferencesButton;
    private javax.swing.JComboBox SelectionBox;
    private javax.swing.JLabel Text;
    // End of variables declaration//GEN-END:variables

}
